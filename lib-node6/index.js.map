{"version":3,"sources":["../src/index.jsx"],"names":["renderToStringApp","render","App","Helmet","context","View","data","app","layout","Layout","htmlData","initialData","Html","css","Set","Object","assign","body","head","rewind","Array","from","join","Error","options"],"mappings":";;;;;;QAQgBA,iB,GAAAA,iB;kBAwCQC,M;;AAhDxB;;;;AACA;;;;AACA;;AACA;;;;;;QAEOC,G;QACAC,M;AAEA,SAASH,iBAAT,OAAyD;AAAA,MAA5BE,GAA4B,QAA5BA,GAA4B;AAAA,MAAvBE,OAAuB,QAAvBA,OAAuB;AAAA,MAAdC,IAAc,QAAdA,IAAc;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAC9DJ,QAAMA,oBAAN;AACA,QAAMK,MAAM;AAAC,OAAD;AAAA,MAAK,SAASH,OAAd;AAAuB,kCAAC,IAAD,EAAUE,IAAV;AAAvB,GAAZ;AACA,SAAO,4BAAeC,GAAf,CAAP;AACD;;AAED,SAASC,MAAT,CAAgBC,MAAhB,EAAwBH,IAAxB,EAA8B;AAC5B,SAAO,8BAAC,MAAD,EAAYA,IAAZ,CAAP;AACD;;AAED,SAASC,GAAT,QAA6E;AAAA,MAA9DH,OAA8D,SAA9DA,OAA8D;AAAA,MAArDC,IAAqD,SAArDA,IAAqD;AAAA,6BAA/CK,QAA+C;AAAA,MAA/CA,QAA+C;AAAA,MAAhCJ,IAAgC,SAAhCA,IAAgC;AAAA,MAA1BK,WAA0B,SAA1BA,WAA0B;AAAA,MAAbC,IAAa,SAAbA,IAAa;AAAA,MAAPV,GAAO,SAAPA,GAAO;;AAC3E,QAAMW,MAAM,IAAIC,GAAJ,EAAZ;AACAJ,aAAWK,OAAOC,MAAP,CAAcN,QAAd,EAAwBJ,IAAxB,CAAX;;AAEA,MAAI,CAACK,WAAL,EAAkB;AAChBA,kBAAcL,IAAd;AACD,GAFD,MAEO;AACLK,kBAAc,OAAOA,WAAP,KAAuB,UAAvB,GAAoCA,aAApC,GAAoDA,WAAlE;AACD;;AAED,QAAMM,OAAOjB,kBAAkB,EAAEE,GAAF,EAAOE,OAAP,EAAgBC,IAAhB,EAAsBC,IAAtB,EAAlB,CAAb;;AAEA,QAAMY,OAAO,sBAAOC,MAAP,EAAb;;AAEAJ,SAAOC,MAAP,CAAcN,QAAd,EAAwB;AACtBQ,QADsB;AAEtBD,QAFsB;AAGtBN,eAHsB;AAItBE,SAAKO,MAAMC,IAAN,CAAWR,GAAX,EAAgBS,IAAhB,CAAqB,EAArB;AAJiB,GAAxB;;AAOA,QAAMb,SAASJ,KAAKI,MAAL,IAAeG,IAA9B;;AAEA,MAAI,CAACH,MAAL,EAAa;AACX,UAAM,IAAIc,KAAJ,CAAU,gBAAV,CAAN;AACD;;AAED,SAAOf,OAAOC,MAAP,EAAeC,QAAf,CAAP;AACD;;AAEc,SAAST,MAAT,CAAgBuB,OAAhB,EAAyB;AACtC,SAAQ,qBAAmB,kCAAqBjB,IAAIiB,OAAJ,CAArB,CAAmC,GAA9D;AACD","file":"index.jsx","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { renderToString, renderToStaticMarkup } from 'react-dom/server';\nimport DefaultApp from './App';\n\nexport App from './App';\nexport Helmet from 'react-helmet';\n\nexport function renderToStringApp({ App, context, View, data }) {\n  App = App || DefaultApp;\n  const app = <App context={context}><View {...data} /></App>;\n  return renderToString(app);\n}\n\nfunction layout(Layout, data) {\n  return <Layout {...data} />;\n}\n\nfunction app({ context, View, htmlData = {}, data, initialData, Html, App }) {\n  const css = new Set();\n  htmlData = Object.assign(htmlData, data);\n\n  if (!initialData) {\n    initialData = data;\n  } else {\n    initialData = typeof initialData === 'function' ? initialData() : initialData;\n  }\n\n  const body = renderToStringApp({ App, context, View, data });\n\n  const head = Helmet.rewind();\n\n  Object.assign(htmlData, {\n    head,\n    body,\n    initialData,\n    css: Array.from(css).join(''),\n  });\n\n  const Layout = View.Layout || Html;\n\n  if (!Layout) {\n    throw new Error('Invalid Layout');\n  }\n\n  return layout(Layout, htmlData);\n}\n\nexport default function render(options) {\n  return `<!doctype html>\\n${renderToStaticMarkup(app(options))}`;\n}\n"]}