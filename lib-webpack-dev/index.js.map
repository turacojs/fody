{"version":3,"sources":["../src/index.jsx"],"names":["React","Helmet","renderToString","renderToStaticMarkup","DefaultApp","DefaultLayout","ReactElementType","App","Html","Head","Body","renderToStringApp","appProps","View","props","app","Layout","layoutProps","content","helmet","rewind","render","options"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,UAAP,MAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAAcC,gBAAd,QAAsC,SAAtC;;AAEA,SAASL,MAAT;iBACgB,O;iBAATM,G;;AACP,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAiC,UAAjC;;AAEA,OAAO,SAASC,iBAAT,GAA4E;AAAA,MAAjDJ,GAAiD,uEAA3CH,UAA2C;AAAA,MAA/BQ,QAA+B;AAAA,MAArBC,IAAqB;AAAA,MAAfC,KAAe;AAAA;AACjF,QAAMC,MAAM;AAAC,SAAD;AAAA,mBAASH,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmB,0BAAC,IAAD,eAAUE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnB,KAAZ;AACA,WAAOZ,eAAea,GAAf,CAAP;AAFiF;AAGlF;;AAED,IAAMA,MAAM,SAANA,GAAM,OAOY;AAAA,yBANtBC,MAMsB;AAAA,MANtBA,MAMsB,+BANbX,aAMa;AAAA,MALtBY,WAKsB,QALtBA,WAKsB;AAAA,MAJtBV,GAIsB,QAJtBA,GAIsB;AAAA,MAHtBK,QAGsB,QAHtBA,QAGsB;AAAA,MAFtBC,IAEsB,QAFtBA,IAEsB;AAAA,MADtBC,KACsB,QADtBA,KACsB;AAAA;AACtB,QAAMI,UAAUP,kBAAkBJ,GAAlB,EAAuBK,QAAvB,EAAiCC,IAAjC,EAAuCC,KAAvC,CAAhB;AACA,QAAMK,SAASlB,OAAOmB,MAAP,EAAf;AACA,WAAO,oBAAC,MAAD,aAAQ,QAAQD,MAAhB,EAAwB,SAASD,OAAjC,IAA8CD,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AAHsB,OAApBX,gBAAoB;AAIvB,CAXD;;AAaA,eAAe,SAASe,MAAT,CAAgBC,OAAhB,EAAyB;AACtC,+BAA2BnB,qBAAqBY,IAAIO,OAAJ,CAArB,CAA3B;AACD","file":"index.jsx","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { renderToString, renderToStaticMarkup } from 'react-dom/server';\nimport DefaultApp from './App';\nimport DefaultLayout from './layout/DefaultLayout';\nimport type { ReactElementType } from './types';\n\nexport { Helmet };\nexport App from './App';\nexport { Html, Head, Body } from './layout';\n\nexport function renderToStringApp(App = DefaultApp, appProps, View, props): string {\n  const app = <App {...appProps}><View {...props} /></App>;\n  return renderToString(app);\n}\n\nconst app = ({\n  Layout = DefaultLayout,\n  layoutProps,\n  App,\n  appProps,\n  View,\n  props,\n}): ReactElementType => {\n  const content = renderToStringApp(App, appProps, View, props);\n  const helmet = Helmet.rewind();\n  return <Layout helmet={helmet} content={content} {...layoutProps} />;\n};\n\nexport default function render(options) {\n  return `<!doctype html>\\n${renderToStaticMarkup(app(options))}`;\n}\n"]}