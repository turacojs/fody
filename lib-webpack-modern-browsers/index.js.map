{"version":3,"sources":["../src/index.jsx"],"names":["React","Helmet","renderToString","renderToStaticMarkup","DefaultApp","DefaultLayout","App","Html","Head","Body","renderToStringApp","appProps","View","props","app","Layout","layoutProps","content","helmet","rewind","render","options"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,UAAP,MAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;;AAGA,SAASJ,MAAT;iBACgB,O;iBAATK,G;;AACP,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAiC,UAAjC;;AAEA,OAAO,SAASC,iBAAT,GAA4E;AAAA,MAAjDJ,GAAiD,uEAA3CF,UAA2C;AAAA,MAA/BO,QAA+B;AAAA,MAArBC,IAAqB;AAAA,MAAfC,KAAe;;AACjF,MAAMC,MAAM;AAAC,OAAD;AAASH,YAAT;AAAmB,wBAAC,IAAD,EAAUE,KAAV;AAAnB,GAAZ;AACA,SAAOX,eAAeY,GAAf,CAAP;AACD;;AAED,IAAMA,MAAM,UAOY;AAAA,yBANtBC,MAMsB;AAAA,MANtBA,MAMsB,+BANbV,aAMa;AAAA,MALtBW,WAKsB,QALtBA,WAKsB;AAAA,MAJtBV,GAIsB,QAJtBA,GAIsB;AAAA,MAHtBK,QAGsB,QAHtBA,QAGsB;AAAA,MAFtBC,IAEsB,QAFtBA,IAEsB;AAAA,MADtBC,KACsB,QADtBA,KACsB;;AACtB,MAAMI,UAAUP,kBAAkBJ,GAAlB,EAAuBK,QAAvB,EAAiCC,IAAjC,EAAuCC,KAAvC,CAAhB;AACA,MAAMK,SAASjB,OAAOkB,MAAP,EAAf;AACA,SAAO,oBAAC,MAAD,aAAQ,QAAQD,MAAhB,EAAwB,SAASD,OAAjC,IAA8CD,WAA9C,EAAP;AACD,CAXD;;AAaA,eAAe,SAASI,MAAT,CAAgBC,OAAhB,EAAyB;AACtC,SAAQ,qBAAmBlB,qBAAqBW,IAAIO,OAAJ,CAArB,CAAmC,GAA9D;AACD","file":"index.jsx","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { renderToString, renderToStaticMarkup } from 'react-dom/server';\nimport DefaultApp from './App';\nimport DefaultLayout from './layout/DefaultLayout';\nimport type { ReactElementType } from './types';\n\nexport { Helmet };\nexport App from './App';\nexport { Html, Head, Body } from './layout';\n\nexport function renderToStringApp(App = DefaultApp, appProps, View, props): string {\n  const app = <App {...appProps}><View {...props} /></App>;\n  return renderToString(app);\n}\n\nconst app = ({\n  Layout = DefaultLayout,\n  layoutProps,\n  App,\n  appProps,\n  View,\n  props,\n}): ReactElementType => {\n  const content = renderToStringApp(App, appProps, View, props);\n  const helmet = Helmet.rewind();\n  return <Layout helmet={helmet} content={content} {...layoutProps} />;\n};\n\nexport default function render(options) {\n  return `<!doctype html>\\n${renderToStaticMarkup(app(options))}`;\n}\n"]}