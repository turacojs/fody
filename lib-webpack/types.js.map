{"version":3,"sources":["../src/types.js"],"names":["t","isValidElement","ReactElementType","irreducible","ReactNodeType","declare","define","union","Nil","String","Number","list"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,cAAd;AACA,SAASC,cAAT,QAA+B,OAA/B;;AAEA,OAAO,IAAMC,mBAAmBF,EAAEG,WAAF,CAAc,cAAd,EAA8BF,cAA9B,CAAzB;AACP,OAAO,IAAMG,gBAAgBJ,EAAEK,OAAF,CAAU,WAAV,CAAtB;;AAEP;AACA;AACAD,cAAcE,MAAd,CAAqBN,EAAEO,KAAF,CAAQ,CAC3BP,EAAEQ,GADyB,EAE3BR,EAAES,MAFyB,EAG3BT,EAAEU,MAHyB,EAI3BR,gBAJ2B,EAK3BF,EAAEW,IAAF,CAAOP,aAAP,CAL2B,CAAR,CAArB","file":"types.js","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n// import { REACT_ELEMENT_TYPE } from 'react/lib/ReactElement';\n//\n// export type ReactElement = {\n//   $$typeof: REACT_ELEMENT_TYPE,\n// }\nimport t from 'tcomb-forked';\nimport { isValidElement } from 'react';\n\nexport const ReactElementType = t.irreducible('ReactElement', isValidElement);\nexport const ReactNodeType = t.declare('ReactNode');\n\n// recursive type\n// https://github.com/gcanti/tcomb/commit/a7c9cd347dd029d33af828712ec18d6bf5a80ba8\nReactNodeType.define(t.union([\n  t.Nil,\n  t.String,\n  t.Number,\n  ReactElementType,\n  t.list(ReactNodeType),\n]));\n\nexport type HelmetDataAttributeType = {\n   toString(): string,\n   toComponent(): ReactElementType,\n};\n\nexport type HelmetDataType = {\n    htmlAttributes: HelmetDataAttributeType,\n    title: HelmetDataAttributeType,\n    base: HelmetDataAttributeType,\n    meta: HelmetDataAttributeType,\n    link: HelmetDataAttributeType,\n    script: HelmetDataAttributeType,\n    style: HelmetDataAttributeType,\n};\n\nexport type LayoutPropsType = {\n   helmet: HelmetDataType,\n   content: string,\n};\n"]}