{"version":3,"sources":["../src/browser.jsx"],"names":["unmountComponentAtNode","render","Helmet","App","appProps","View","props","element","app"],"mappings":";;;;;;;AAEA;;;;;qBAKSA,sB;;;kBAIeC,M;;AAVxB;;;;;;AAIA;;;;;;;;;;QAGOC,M;QACAC,G;AAEQ,SAASF,MAAT,CAAgB,EAAEE,mBAAF,EAAoBC,QAApB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2CC,OAA3C,EAAhB,EAAsE;AACnF,MAAIC,MAAM;AAAC,OAAD;AAASJ,YAAT;AAAmB,kCAAC,IAAD,EAAUE,KAAV;AAAnB,GAAV;;AAMA,SAAO,mBAASL,MAAT,CAAgBO,GAAhB,EAAqBD,OAArB,CAAP;AACD","file":"browser.jsx","sourcesContent":["/* eslint react/no-render-return-value: \"off\" */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport RedBoxWrapper from './RedBoxWrapper';\nimport DefaultApp from './App';\n\nexport { unmountComponentAtNode } from 'react-dom';\nexport Helmet from 'react-helmet';\nexport App from './App';\n\nexport default function render({ App = DefaultApp, appProps, View, props, element }) {\n  let app = <App {...appProps}><View {...props} /></App>;\n  if (!PRODUCTION) {\n    app = (\n      <AppContainer errorReporter={RedBoxWrapper}>{app}</AppContainer>\n    );\n  }\n  return ReactDOM.render(app, element);\n}\n"]}