{"version":3,"sources":["../src/server.jsx"],"names":[],"mappings":";;;;;QAIgB;kBAkCQ;;AAtCxB;;;;AACA;;AACA;;;;;;;;;;;;;EAEO,SAAS,iBAAT,OAAyD;QAA5B,eAA4B;QAAvB,uBAAuB;QAAd,iBAAc;QAAR,iBAAQ;;AAC5D,UAAM,wBAAN,CAD4D;AAE5D,WAAO,4BAAe;AAAC,WAAD;UAAK,SAAS,OAAT,EAAL;QAAuB,8BAAC,IAAD,EAAU,IAAV,CAAvB;KAAf,CAAP,CAF4D;CAAzD;;;;;;EAKP,SAAS,MAAT,CAAgB,MAAhB,EAAwB,IAAxB,EAA8B;AAC1B,WAAO,8BAAC,MAAD,EAAY,IAAZ,CAAP,CAD0B;CAA9B;;;;;EAIA,SAAS,GAAT,QAA6E;QAA9D,wBAA8D;QAArD,kBAAqD;+BAA/C,SAA+C;QAA/C,0CAAW,oBAAoC;QAAhC,kBAAgC;QAA1B,gCAA0B;QAAb,kBAAa;QAAP,gBAAO;;AACzE,UAAM,MAAM,IAAI,GAAJ,EAAN,CADmE;AAEzE,eAAW,OAAO,MAAP,CAAc,QAAd,EAAwB,IAAxB,CAAX,CAFyE;;AAIzE,UAAM,MAAM;AACR,gBAAQ,SAAS,IAAI,GAAJ,CAAQ,KAAR,CAAT;AACR,kBAAU,SAAS,SAAS,KAAT,GAAiB,KAAjB;AACnB,iBAAS,CAAC,GAAD,EAAM,KAAN,KAAgB,SAAS,GAAT,IAAgB,KAAhB;AACzB,wBAJQ;KAAN,CAJmE;;AAWzE,WAAO,MAAP,CAAc,QAAd,EAAwB;AACpB,cAAM,kBAAkB;AACpB,qBAAS,GAAT;AACA,oBAFoB;AAGpB,sBAHoB;AAIpB,sBAJoB;SAAlB,CAAN;AAMA,qBAAa,CAAC,WAAD,GAAe,IAAf,GAAuB,OAAO,WAAP,KAAuB,UAAvB,GAAoC,aAApC,GAAoD,WAApD;AACpC,aAAK,MAAM,IAAN,CAAW,GAAX,EAAgB,IAAhB,CAAqB,EAArB,CAAL;KARJ,EAXyE;;AAsBzE,WAAO,OAAO,KAAK,MAAL,IAAe,IAAf,EAAqB,QAA5B,EAAsC,GAAtC,CAAP,CAtByE;CAA7E;;;;;EAyBe,SAAS,MAAT,CAAgB,OAAhB,EAAyB;AACpC,WAAO,sBAAsB,kCAAqB,IAAI,OAAJ,CAArB,CAAtB,CAD6B;CAAzB","file":"server.js","sourcesContent":["import React from 'react';\nimport { renderToString, renderToStaticMarkup } from 'react-dom/server';\nimport DefaultApp from 'fody-app';\n\nexport function renderToStringApp({ App, context, View, data }) {\n    App = App || DefaultApp;\n    return renderToString(<App context={context}><View {...data} /></App>);\n}\n\nfunction layout(Layout, data) {\n    return <Layout {...data} />;\n}\n\nfunction app({ context, View, htmlData = {}, data, initialData, Html, App }) {\n    const css = new Set();\n    htmlData = Object.assign(htmlData, data);\n\n    const ctx = {\n        addCss: value => css.add(value),\n        setTitle: value => htmlData.title = value,\n        setMeta: (key, value) => htmlData[key] = value,\n        context,\n    };\n\n    Object.assign(htmlData, {\n        body: renderToStringApp({\n            context: ctx,\n            App,\n            View,\n            data,\n        }),\n        initialData: !initialData ? data : (typeof initialData === 'function' ? initialData() : initialData), // eslint-disable-line no-nested-ternary\n        css: Array.from(css).join(''),\n    });\n\n    return layout(View.Layout || Html, htmlData, ctx);\n}\n\nexport default function render(options) {\n    return '<!doctype html>\\n' + renderToStaticMarkup(app(options));\n}\n"]}